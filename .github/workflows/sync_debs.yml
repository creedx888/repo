name: Sync arm64 DEBs from EeveeSpotify

on:
  schedule:
    - cron: '0 */12 * * *'  # Runs every 12 hours (UTC)
  release:
    types:
      - published
  workflow_dispatch:  # Allows manual trigger

jobs:
  sync-debs:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Remove old arm64 DEBs (eevee.spotify or swift.protobuf)
      - name: Remove old arm64 DEB files
        run: |
          for deb_file in debs/*.deb; do
            if [[ "$deb_file" == *"eevee.spotify"* ]] || [[ "$deb_file" == *"swift.protobuf"* ]]; then
              rm -f "$deb_file"
            fi
          done

      # Step 3: Download arm64 DEBs from EeveeSpotifyReborn
      - name: Download arm64 DEBs from EeveeSpotifyReborn
        run: |
          API_URL="https://api.github.com/repos/whoeevee/EeveeSpotifyReborn/releases/latest"
          curl -s $API_URL | jq -r '.assets[] | select(.name | test("iphoneos-arm64.*deb$")) | .browser_download_url' | while read deb_url; do
            wget -P debs/ $deb_url
          done

      # Step 4: Create or update Packages file in the root
      - name: Create or update Packages file for arm64 in root
        run: |
          dpkg-scanpackages debs /dev/null > Packages

      # Step 5: Create Packages.gz (keep both Packages and Packages.gz)
      - name: Create Packages.gz
        run: |
          rm -f Packages.gz
          gzip -k Packages

      # Step 6: Commit and push changes
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://github-actions:${{ secrets.GH_TOKEN }}@github.com/creedx888/repo.git
          git add debs/ Packages Packages.gz
          git commit -m "Auto-update arm64 DEBs from EeveeSpotify"
          git push origin main
